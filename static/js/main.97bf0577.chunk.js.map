{"version":3,"sources":["const.ts","types/action.ts","store/actions.ts","store/root-reducer.ts","store/user-process/user-process-reducer.ts","store/offers/offers-reducer.ts","store/user/user-reducer.ts","store/state/state-reducer.ts","store/api-actions.ts","store/user/selector.ts","services/token.ts","types/offer.ts","types/reviews.ts","components/header/user-logged-view-bar.tsx","components/header/user-not-logged-view-bar.tsx","store/user-process/selectors.ts","components/header/header.tsx","components/auth-screen/auth-screen.tsx","store/offers/selectors.ts","components/offer-card/utils.ts","components/offer-card/offer-card.tsx","components/favorites-screen/favorites-list-item.tsx","components/favorites-screen/favorites-screen.tsx","store/state/selector.ts","components/sort/sort.tsx","components/offer-card/offer-card-list.tsx","components/cities-navigation/cities-navigation.tsx","hooks/useMap.tsx","components/map/map.tsx","components/offers-empty/offers-empty.tsx","components/main-screen/main-screen.tsx","components/not-fount-screen/not-found-screen.tsx","components/near-places/near-places.tsx","components/reviews/review-item.tsx","components/reviews/reviews-list.tsx","components/reviews/review-form.tsx","components/offer-card/offer-detailed-page.tsx","utils.ts","components/spinner/spinner.tsx","components/private-route/private-route.tsx","browser-history.ts","components/app/app.tsx","services/api.ts","store/middlewares/redirect.ts","index.tsx"],"names":["AppRoute","APIRoute","AuthorizationStatus","OfferCardType","OfferType","CityName","SortType","ActionType","NameSpace","cityChanged","createAction","CityChangedAction","currentCity","payload","activeCity","offersLoaded","OffersLoadedAction","offers","sortTypeChanged","SortTypeChangedAction","sortType","currentSortType","requireAuthorization","RequireAuthorizationAction","authStatus","logoutRequired","RequireLogoutAction","loginChanged","LoginChangedAction","login","redirectedToRouter","RedirectedToRouteAction","url","offerDetailedLoaded","OfferDetailedLoadedAction","offer","loadedOfferReviews","OfferReviewsLoadedAction","reviews","loadNearbyOffers","LoadedNearbyOffersAction","nearbyPlaces","nearbyOffers","loadFavoritesOffers","LoadFavoritesOffersAction","favoriteOffers","offerUpdated","OfferUpdatedAction","updatedOffer","initialState","authorizationStatus","Unknown","userProcessReducer","createReducer","builder","addCase","state","action","NoAuth","detailedOffer","isDataLoaded","Paris","offersReducer","updateOffers","id","filter","item","isFavorite","index","findIndex","slice","userReducer","email","Popular","stateReducer","Messages","rootReducer","combineReducers","Offers","UserProcesses","UserData","StateData","getUserLogin","getUserReviews","AUTH_TOKEN_KEY_NAME","saveToken","token","localStorage","setItem","adaptToClient","data","city","name","location","latitude","longitude","zoom","previewImage","images","title","isPremium","rating","type","bedrooms","maxAdults","price","goods","host","isPro","avatarUrl","description","String","adaptReviewToClient","reviewMessage","date","author","getAdaptedComments","map","postFavoriteAction","offerId","dispatch","_getState","api","a","post","Favorite","toast","error","FAILED_POST_FAVORITE","UserLoggedViewBar","useSelector","useDispatch","className","to","Favorites","href","onClick","evt","preventDefault","Main","delete","Logout","removeItem","UserNotLoggedViewBar","SignIn","getAuthorizationStatus","Header","src","alt","width","height","Auth","memo","AuthScreen","history","useHistory","loginRef","useRef","passwordRef","onSubmit","authData","password","Login","success","LOGIN_SUCCESS","LOGIN_ERROR","loginAction","push","method","current","value","ref","placeholder","required","pattern","getDetailedOffer","getCityOffers","getCurrentCity","getNearbyOffers","getOffersLoadStatus","getFavoritesOffers","getArticleClass","param","NearPlaces","getImageWrapper","getImageWidth","getImageHeight","getOfferType","offerType","Apartment","Room","House","Hotel","Error","OfferCard","props","onMouseEnter","onMouseLeave","renderPremiumTag","xlinkHref","style","FavoritesListItem","favoriteOfferCity","favoriteOffer","FavoritesScreen","hasFavoriteOffers","length","favoriteOffersCities","Set","forEach","add","useEffect","get","FAILED_GET_FAVORITE","getCurrentSortType","Sort","useState","dropdownOpened","setDropdownOpened","sortTypes","Object","values","onSortTypeClick","onSortTypeChange","tabIndex","OfferCardList","sortedOffers","PriceIncrease","sort","offerA","offerB","PriceDecrease","TopRatedFirst","getSortedOffers","Cities","onOfferMouseEnter","onOfferMouseLeave","CitiesNavigation","useMap","markerGroup","mapRef","cityLocation","setMap","instance","Map","center","lat","lng","layer","TileLayer","attribution","addLayer","defaultCustomIcon","Icon","iconUrl","iconSize","iconAnchor","currentCustomIcon","points","selectedPoint","clearLayers","L","layerGroup","addTo","point","Marker","setIcon","setView","minHeight","maxWidth","marginLeft","marginRight","OffersEmpty","MainScreen","cityOffers","undefined","selectedOffer","setSelectedOffer","currentPoint","find","NotFoundScreen","display","gridTemplateColumns","fontFamily","color","padding","margin","flexDirection","justifyContent","textAlign","fontSize","fontStyle","textDecoration","background","backgroundPositionX","backgroundPositionY","borderRadius","transform","border","nearestOffers","nearestOffer","ReviewItem","review","dateTime","dayjs","format","dateFormatted","ReviewsList","userReviews","prev","next","diff","ReviewForm","commentMessage","setComment","setRating","isFormDisabled","setIsFormDisabled","isFormInvalid","Boolean","onCommentPost","callbacks","commentText","onStart","Reviews","comment","onSuccess","onError","info","POST_ERROR_MESSAGE","postCommentAction","e","htmlFor","onChange","checked","disabled","minLength","maxLength","event","target","OfferDetailedPage","nearByOffers","mapPoints","useParams","adaptedOffer","NotFound","loadDetailedOffer","loadNearbyPlaces","window","scroll","Math","min","image","round","Spinner","message","alignItems","PrivateRoute","exact","path","render","browserHistory","createBrowserHistory","App","HttpCode","isCheckedAuth","redirect","_store","onUnauthorized","axios","create","baseURL","timeout","interceptors","request","use","config","getItem","getToken","headers","response","status","Unauthorized","Promise","reject","createAPI","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","then","REQUIRED_AUTH","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97bf0577.chunk.js","sourcesContent":["export const MAX_RATING_POINT = 5;\nexport const PERCENT = 100;\n\nexport enum AppRoute {\n  Main = '/',\n  SignIn = '/login',\n  Favorites = '/favorites',\n  Room = '/offer',\n  NotFound = '/404',\n}\n\nexport enum APIRoute {\n  Offers = '/hotels',\n  Favorite = '/favorite',\n  FavoriteStatus = '/favorite/hotel_id/:status',\n  Login = '/login',\n  Logout = '/logout',\n  Reviews = '/comments',\n  Test = '/test'\n}\n\nexport enum AuthorizationStatus {\n  Auth = 'AUTH',\n  NoAuth = 'NO_AUTH',\n  Unknown = 'UNKNOWN',\n}\n\nexport const URL_MARKER_DEFAULT = 'img/pin.svg';\n\nexport const URL_MARKER_CURRENT = 'img/pin-active.svg';\n\nexport const enum OfferCardType {\n  Cities,\n  NearPlaces,\n  Favorites,\n}\n\nexport const enum OfferType {\n  Apartment = 'apartment',\n  Room = 'room',\n  House = 'house',\n  Hotel = 'hotel'\n}\n\nexport enum CityName {\n  Paris = 'Paris',\n  Cologne = 'Cologne',\n  Brussels = 'Brussels',\n  Amsterdam = 'Amsterdam',\n  Hamburg = 'Hamburg',\n  Dusseldorf = 'Dusseldorf'\n}\n\nexport enum SortType {\n  Popular = 'Popular',\n  PriceIncrease = 'Price: low to high',\n  PriceDecrease = 'Price: high to low',\n  TopRatedFirst = 'Top rated first'\n}\n","import {Action} from 'redux';\nimport {AxiosInstance} from 'axios';\nimport {\n  ThunkAction\n} from 'redux-thunk';\n\nimport {State} from './state';\n\nexport enum ActionType {\n  CityChangedAction = 'app/city-changed',\n  OffersLoadedAction = 'data/offers-loaded',\n  OfferReviewsLoadedAction = 'data/offers-comments-loaded',\n  OfferDetailedLoadedAction = 'data/detailed-offer-loaded',\n  SortTypeChangedAction = 'sort/sort-type-changed',\n  RequireAuthorizationAction = 'user/require-authorization',\n  RequireLogoutAction = 'user/require-logout',\n  LoginChangedAction = 'user/login-added',\n  RedirectedToRouteAction = 'user/redirect',\n  LoadedNearbyOffersAction = 'data/near-by-places-loaded',\n  LoadFavoritesOffersAction = 'data/load-favorite-offers',\n  OfferUpdatedAction = 'data/offer-updated'\n}\n\nexport type ThunkActionResult<R = Promise<void>> = ThunkAction<R, State, AxiosInstance, Action>;\n","import {createAction} from '@reduxjs/toolkit';\nimport {ActionType} from '../types/action';\nimport {Offer, Offers} from '../types/offer';\nimport {Reviews} from '../types/reviews';\nimport {AppRoute, AuthorizationStatus, SortType} from '../const';\n\nexport const cityChanged = createAction(\n  ActionType.CityChangedAction,\n  (currentCity: string) => ({\n    payload: {\n      activeCity: currentCity,\n    },\n  }),\n);\n\nexport const offersLoaded = createAction(\n  ActionType.OffersLoadedAction,\n  (offers: Offers) => ({\n    payload: {\n      offers,\n    },\n  }),\n);\n\nexport const sortTypeChanged = createAction(\n  ActionType.SortTypeChangedAction,\n  (sortType: SortType) => ({\n    payload: {\n      currentSortType: sortType,\n    },\n  }),\n);\n\nexport const requireAuthorization = createAction(\n  ActionType.RequireAuthorizationAction,\n  (authStatus: AuthorizationStatus) => ({\n    payload: {\n      authStatus: authStatus,\n    },\n  }),\n);\n\nexport const logoutRequired = createAction(ActionType.RequireLogoutAction);\n\nexport const loginChanged = createAction(\n  ActionType.LoginChangedAction,\n  (login: string) => ({\n    payload: {\n      login,\n    },\n  }),\n);\n\nexport const redirectedToRouter = createAction(\n  ActionType.RedirectedToRouteAction,\n  (url: AppRoute) => ({\n    payload: {\n      url,\n    },\n  }),\n);\n\nexport const offerDetailedLoaded = createAction(\n  ActionType.OfferDetailedLoadedAction,\n  (offer: Offer) => ({\n    payload: {\n      offer,\n    },\n  }),\n);\n\nexport const loadedOfferReviews = createAction(\n  ActionType.OfferReviewsLoadedAction,\n  (reviews: Reviews) => ({\n    payload: {\n      reviews,\n    },\n  }),\n);\n\nexport const loadNearbyOffers = createAction(\n  ActionType.LoadedNearbyOffersAction,\n  (nearbyPlaces: Offers) => ({\n    payload: {\n      nearbyOffers: nearbyPlaces,\n    },\n  }),\n);\n\nexport const loadFavoritesOffers = createAction(\n  ActionType.LoadFavoritesOffersAction,\n  (favoriteOffers: Offers) => ({\n    payload: {\n      favoriteOffers: favoriteOffers,\n    },\n  }),\n);\n\nexport const offerUpdated = createAction(\n  ActionType.OfferUpdatedAction,\n  (updatedOffer: Offer) => ({\n    payload: {\n      updatedOffer: updatedOffer,\n    },\n  }),\n);\n\n","import {combineReducers} from 'redux';\nimport {userProcessReducer} from './user-process/user-process-reducer';\nimport {offersReducer} from './offers/offers-reducer';\nimport {userReducer} from './user/user-reducer';\nimport {stateReducer} from './state/state-reducer';\n\nexport enum NameSpace {\n  Offers= 'OFFERS',\n  UserProcesses = 'USER_PROCESSES',\n  UserData = 'USER_DATA',\n  StateData = 'STATE_DATA',\n}\n\nexport const rootReducer = combineReducers({\n  [NameSpace.Offers]: offersReducer,\n  [NameSpace.UserProcesses]: userProcessReducer,\n  [NameSpace.UserData]: userReducer,\n  [NameSpace.StateData]: stateReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>\n","import {UserProcessData} from '../../types/state';\nimport {logoutRequired, requireAuthorization} from '../../store/actions';\nimport {AuthorizationStatus} from '../../const';\nimport {createReducer} from '@reduxjs/toolkit';\n\nconst initialState: UserProcessData = {\n  authorizationStatus: AuthorizationStatus.Unknown,\n};\n\nexport const userProcessReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(requireAuthorization, (state, action) => {\n      state.authorizationStatus = action.payload.authStatus;\n    })\n    .addCase(logoutRequired, (state) => {\n      state.authorizationStatus = AuthorizationStatus.NoAuth;\n    });\n});\n\n","import {createReducer} from '@reduxjs/toolkit';\nimport {\n  offersLoaded,\n  offerDetailedLoaded,\n  loadNearbyOffers,\n  cityChanged,\n  loadFavoritesOffers,\n  offerUpdated\n} from '../actions';\nimport {OffersData} from '../../types/state';\nimport {CityName} from '../../const';\nimport {Offer, Offers} from '../../types/offer';\n\nconst INITIAL_CITY = CityName.Paris;\n\nconst initialState: OffersData = {\n  offers: [],\n  detailedOffer: null,\n  nearbyOffers: [],\n  isDataLoaded: false,\n  currentCity: INITIAL_CITY,\n  favoriteOffers: [],\n};\n\nexport const offersReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(offersLoaded, (state, action) => {\n      state.offers = action.payload.offers;\n      state.isDataLoaded = true;\n    })\n    .addCase(offerDetailedLoaded, (state, action) => {\n      state.detailedOffer = action.payload.offer;\n    })\n    .addCase(loadNearbyOffers, (state, action) => {\n      state.nearbyOffers = action.payload.nearbyOffers;\n    })\n    .addCase(cityChanged, (state, action) => {\n      state.currentCity = action.payload.activeCity;\n    })\n    .addCase(loadFavoritesOffers, (state, action) => {\n      state.favoriteOffers = action.payload.favoriteOffers;\n    })\n    .addCase(offerUpdated, (state, action) => {\n      state.offers = updateOffers(state.offers, action.payload.updatedOffer);\n      if (state.detailedOffer?.id === action.payload.updatedOffer.id) {\n        state.detailedOffer = action.payload.updatedOffer;\n      }\n      state.nearbyOffers = updateOffers(state.nearbyOffers, action.payload.updatedOffer);\n      state.favoriteOffers = updateOffers(state.favoriteOffers, action.payload.updatedOffer)\n        .filter((item) => item.isFavorite);\n    });\n});\n\nconst updateOffers = (offers: Offers, updatedOffer: Offer): Offers => {\n  const index = offers.findIndex((offer) => offer.id === updatedOffer.id);\n\n  if (index === -1) {\n    return offers;\n  }\n\n  return [\n    ...offers.slice(0, index),\n    updatedOffer,\n    ...offers.slice(index + 1),\n  ];\n};\n","import {UserData} from '../../types/state';\nimport {createReducer} from '@reduxjs/toolkit';\nimport {loginChanged, loadedOfferReviews} from '../../store/actions';\n\nconst initialState: UserData = {\n  email: '',\n  reviews: null,\n};\n\nexport const userReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loginChanged, (state, action) => {\n      state.email = action.payload.login;\n    })\n    .addCase(loadedOfferReviews, (state, action) => {\n      state.reviews = action.payload.reviews;\n    });\n});\n","import {createReducer} from '@reduxjs/toolkit';\nimport {StateData} from '../../types/state';\nimport {sortTypeChanged} from '../../store/actions';\nimport {SortType} from '../../const';\n\n\nconst initialState: StateData = {\n  currentSortType: SortType.Popular,\n};\n\nexport const stateReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(sortTypeChanged, (state, action) => {\n      state.currentSortType = action.payload.currentSortType;\n    });\n});\n","import {ThunkActionResult} from '../types/action';\nimport {\n  loadedOfferReviews,\n  loadNearbyOffers,\n  loginChanged,\n  offerDetailedLoaded,\n  offersLoaded,\n  redirectedToRouter,\n  requireAuthorization,\n  loadFavoritesOffers,\n  offerUpdated, logoutRequired\n} from './actions';\nimport {dropToken, saveToken, Token} from '../services/token';\nimport {APIRoute, AppRoute, AuthorizationStatus} from '../const';\nimport {adaptToClient, OfferFromServer} from '../types/offer';\nimport {Comment, getAdaptedComments, ReviewsFromServer} from '../types/reviews';\nimport {toast} from 'react-toastify';\n\nconst enum Messages {\n  REQUIRED_AUTH = 'Не забудьте авторизоваться',\n  LOGIN_SUCCESS = 'Вы успешно авторизованы. Попробуйте все возможности 6 Cities.',\n  LOGIN_ERROR = 'Не удалось авторизоваться. Проверьте подключение к интернету и повторите попытку.',\n  POST_ERROR_MESSAGE = 'Отзыв не удалось отправить. Проверьте подключение к интернету и повторите попытку.',\n  FAILED_POST_FAVORITE = 'Не удалось добавить предложение в избранное. Попробуйте еще раз.',\n  FAILED_GET_FAVORITE = 'Не удалось загрузить избранные предложения. Попробуйте еще раз.'\n}\n\nexport type AuthData = {\n  login: string;\n  password: string;\n};\n\nexport const loadOffers = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const {data} = await api.get<OfferFromServer[]>(APIRoute.Offers);\n      const offers = data.map((item) => adaptToClient(item));\n      dispatch(offersLoaded(offers));\n    }\n    catch {\n      dispatch(offersLoaded([]));\n    }\n  };\n\nexport const loadDetailedOffer = (id: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try{\n      const {data} = await api.get<OfferFromServer>(`${APIRoute.Offers}/${id}`);\n      const adaptedOffer = adaptToClient(data);\n      dispatch(offerDetailedLoaded(adaptedOffer));\n    }\n    catch{\n      dispatch(redirectedToRouter(AppRoute.NotFound));\n    }\n  };\n\nexport const checkAuthAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    try {\n      await api.get(APIRoute.Login)\n        .then((response) => {\n          if (response.data) {\n            dispatch(loginChanged(response.data.email));\n            dispatch(requireAuthorization(AuthorizationStatus.Auth));\n          }\n        });\n    } catch {\n      toast.info(Messages.REQUIRED_AUTH);\n    }\n  };\n\nexport const loginAction = ({login: email, password}: AuthData): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    try{\n      const {data: {token}} = await api.post<{token: Token}>(APIRoute.Login, {email, password});\n      saveToken(token);\n      dispatch(loginChanged(email));\n      dispatch(requireAuthorization(AuthorizationStatus.Auth));\n      dispatch(redirectedToRouter(AppRoute.Main));\n      toast.success(Messages.LOGIN_SUCCESS);\n    } catch {\n      toast.error(Messages.LOGIN_ERROR);\n    }\n  };\n\nexport const logoutAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    await api.delete(APIRoute.Logout);\n    dropToken();\n    dispatch(logoutRequired());\n  };\n\nexport const loadOfferReview = (offerId: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<ReviewsFromServer>(`${APIRoute.Reviews}/${offerId}`);\n    dispatch(loadedOfferReviews(getAdaptedComments(data)));\n  };\n\nexport const postCommentAction = ({commentText, rating}: Comment, offerId: string, callbacks: {onStart: () => void, onSuccess: () => void, onError: () => void}): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      callbacks.onStart();\n      const {data} = await api.post<ReviewsFromServer>(`${APIRoute.Reviews}/${offerId}`, {comment: commentText, rating: rating});\n      dispatch(loadedOfferReviews(getAdaptedComments(data)));\n      callbacks.onSuccess();\n    }\n    catch {\n      callbacks.onError();\n      toast.info(Messages.POST_ERROR_MESSAGE);\n    }\n  };\n\nexport const loadNearbyPlaces = (offerId: string): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<OfferFromServer[]>(`${APIRoute.Offers}/${offerId}/nearby`);\n    const offers = data.map((item) => adaptToClient(item));\n    dispatch(loadNearbyOffers(offers));\n  };\n\nexport const loadFavorites = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const {data} = await api.get<OfferFromServer[]>(APIRoute.Favorite);\n      const offers = data.map((item) => adaptToClient(item));\n      dispatch(loadFavoritesOffers(offers));\n    } catch {\n      toast.error(Messages.FAILED_GET_FAVORITE);\n    }\n  };\n\nexport const postFavoriteAction = (offerId: string, isFavorite: boolean): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try{\n      const {data} = await api.post<OfferFromServer>(`${APIRoute.Favorite}/${offerId}/${isFavorite ? 1 : 0}`);\n      const offer = adaptToClient(data);\n      dispatch(offerUpdated(offer));\n    } catch {\n      toast.error(Messages.FAILED_POST_FAVORITE);\n    }\n  };\n","import {State} from '../../types/state';\nimport {NameSpace} from '../root-reducer';\nimport {Reviews} from '../../types/reviews';\n\nexport const getUserLogin = (state: State): string => state[NameSpace.UserData].email;\nexport const getUserReviews = (state: State): Reviews | null => state[NameSpace.UserData].reviews;\n","const AUTH_TOKEN_KEY_NAME = 'six-sities-token';\n\nexport type Token = string;\n\nexport const getToken = (): Token => {\n  const token = localStorage.getItem(AUTH_TOKEN_KEY_NAME);\n  return token ?? '';\n};\n\nexport const saveToken = (token: Token): void => {\n  localStorage.setItem(AUTH_TOKEN_KEY_NAME, token);\n};\n\nexport const dropToken = (): void => {\n  localStorage.removeItem(AUTH_TOKEN_KEY_NAME);\n};\n","import {OfferType} from '../const';\n\nexport type Offer = {\n  city: {\n    name: string,\n    location: Location,\n  },\n  previewImage: string,\n  images: string[],\n  title: string,\n  isFavorite: boolean,\n  isPremium: boolean,\n  rating: number,\n  type: OfferType,\n  bedrooms: number,\n  maxAdults: number,\n  price: number,\n  goods: string[],\n  host: HostInfo,\n  description: string,\n  location: Location,\n  id: string,\n};\n\nexport type Offers = Offer[];\n\nexport type City = {\n  name: string,\n  location: Location,\n}\n\nexport type Location = {\n  latitude: number,\n  longitude: number,\n  zoom: number\n}\n\nexport type HostInfo = {\n  id: number,\n  name: string,\n  isPro: boolean\n  avatarUrl: string,\n};\n\nexport type OfferFromServer = {\n  'city': {\n    name: string,\n    location: Location,\n  },\n  'preview_image': string;\n  'images': string[];\n  'title': string;\n  'is_favorite': boolean;\n  'is_premium': boolean;\n  'rating': number;\n  'type': OfferType;\n  'bedrooms': number;\n  'max_adults': number;\n  'price': number;\n  'goods': string[];\n  'host': HostInfoFromServer;\n  'description': string;\n  'location': Location;\n  'placeType': string;\n  'id': number;\n}\n\ntype HostInfoFromServer = {\n  'id': number;\n  'name': string;\n  'avatar_url': string;\n  'is_pro': boolean;\n}\n\nexport const adaptToClient = (data: OfferFromServer): Offer => ({\n  city: {\n    name: data['city']['name'],\n    location: {\n      latitude: data['city']['location']['latitude'],\n      longitude: data['city']['location']['longitude'],\n      zoom: data['city']['location']['zoom'],\n    },\n  },\n  previewImage: data['preview_image'],\n  images: data['images'],\n  title: data['title'],\n  isFavorite: data['is_favorite'],\n  isPremium: data['is_premium'],\n  rating: data['rating'],\n  type: data['type'],\n  bedrooms: data['bedrooms'],\n  maxAdults: data['max_adults'],\n  price: data['price'],\n  goods: data['goods'],\n  host: {\n    id: data['host']['id'],\n    name: data['host']['name'],\n    isPro: data['host']['is_pro'],\n    avatarUrl: data['host']['avatar_url'],\n  },\n  description: data['description'],\n  location: {\n    latitude: data['location']['latitude'],\n    longitude: data['location']['longitude'],\n    zoom: data['location']['zoom'],\n  },\n  id: String(data['id']),\n});\n\n","export type Review = {\n  id: string,\n  reviewMessage: string,\n  date: Date,\n  rating: number,\n  author: ReviewAuthor\n};\n\nexport type Reviews = Review[];\n\nexport type ReviewAuthor = {\n  id: string,\n  avatarUrl: string,\n  name: string,\n  isPro: boolean\n};\n\nexport type Comment = {\n  commentText: string,\n  rating: number,\n}\n\nexport type ReviewFromServer = {\n  'id': string;\n  'user': ReviewAuthorFromServer;\n  'comment': string\n  'rating': number;\n  'date': Date;\n}\n\nexport type ReviewsFromServer = ReviewFromServer[];\n\nexport type ReviewAuthorFromServer = {\n  'id': string;\n  'name': string;\n  'avatar_url': string;\n  'is_pro': boolean;\n}\n\nexport const adaptReviewToClient = (data: ReviewFromServer): Review => ({\n  id: data['id'],\n  reviewMessage: data['comment'],\n  date: data['date'],\n  rating: data['rating'],\n  author: {\n    id: data['user']['id'],\n    avatarUrl: data['user']['avatar_url'],\n    name: data['user']['name'],\n    isPro: data['user']['is_pro'],\n  },\n});\n\nexport const getAdaptedComments = (data: ReviewsFromServer): Reviews => data.map(adaptReviewToClient);\n","import {Link} from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\nimport React from 'react';\nimport {AppRoute} from '../../const';\nimport {getUserLogin} from '../../store/user/selector';\nimport {logoutAction} from '../../store/api-actions';\nimport {redirectedToRouter} from '../../store/actions';\n\nfunction UserLoggedViewBar(): JSX.Element {\n  const email = useSelector(getUserLogin);\n  const dispatch = useDispatch();\n\n  const handleClickSignOut = (evt: React.MouseEvent<HTMLAnchorElement>) => {\n    evt.preventDefault();\n    dispatch(redirectedToRouter(AppRoute.Main));\n    dispatch(logoutAction());\n  };\n\n  return (\n    <>\n      <li className=\"header__nav-item user\">\n        <Link className=\"header__nav-link header__nav-link--profile\" to={AppRoute.Favorites}>\n          <div className=\"header__avatar-wrapper user__avatar-wrapper\">\n          </div>\n          <span className=\"header__user-name user__name\">{email}</span>\n        </Link>\n      </li>\n      <li className=\"header__nav-item\">\n        <a className=\"header__nav-link\"\n          href=\"#\"\n          onClick={handleClickSignOut}\n        >\n          <span className=\"header__signout\" >Sign out</span>\n        </a>\n      </li>\n    </>\n  );\n}\n\nexport default UserLoggedViewBar;\n","import {Link} from 'react-router-dom';\nimport {AppRoute} from '../../const';\n\nfunction UserNotLoggedViewBar(): JSX.Element {\n  return (\n    <li className=\"header__nav-item user\">\n      <Link className=\"header__nav-link header__nav-link--profile\" to={AppRoute.SignIn}>\n        <div className=\"header__avatar-wrapper user__avatar-wrapper\">\n        </div>\n        <span className=\"header__login\">Sign in</span>\n      </Link>\n    </li>\n  );\n}\n\nexport default UserNotLoggedViewBar;\n","import {AuthorizationStatus} from '../../const';\nimport {State} from '../../types/state';\nimport {NameSpace} from '../root-reducer';\n\nexport const getAuthorizationStatus = (state: State): AuthorizationStatus => state[NameSpace.UserProcesses].authorizationStatus;\n","import {memo} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport UserLoggedViewBar from './user-logged-view-bar';\nimport UserNotLoggedViewBar from './user-not-logged-view-bar';\nimport {getAuthorizationStatus} from '../../store/user-process/selectors';\n\nfunction Header(): JSX.Element {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <header className='header'>\n      <div className='container'>\n        <div className='header__wrapper'>\n          <div className='header__left'>\n            <Link to={AppRoute.Main} className='header__logo-link header__logo-link--active'>\n              <img className='header__logo' src='img/logo.svg' alt='6 cities logo' width='81' height='41'/>\n            </Link>\n          </div>\n          <nav className='header__nav'>\n            <ul className='header__nav-list'>\n              {authorizationStatus === AuthorizationStatus.Auth\n                ? <UserLoggedViewBar/>\n                : <UserNotLoggedViewBar/>}\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default memo(Header);\n","import React, {FormEvent, useRef} from 'react';\nimport Header from '../header/header';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AuthData, loginAction} from '../../store/api-actions';\nimport {loginChanged} from '../../store/actions';\nimport {useHistory, Link} from 'react-router-dom';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport {getAuthorizationStatus} from '../../store/user-process/selectors';\n\nfunction AuthScreen(): JSX.Element {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const loginRef = useRef<HTMLInputElement | null>(null);\n  const passwordRef = useRef<HTMLInputElement | null>(null);\n\n  const onSubmit = (authData: AuthData) => {\n    dispatch(loginAction(authData));\n    dispatch(loginChanged(authData.login));\n  };\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n\n    if (loginRef.current !== null && passwordRef.current !== null) {\n      onSubmit({\n        login: loginRef.current.value,\n        password: passwordRef.current.value,\n      });\n\n      history.push(AppRoute.Main);\n    }\n  };\n\n  if (authorizationStatus === AuthorizationStatus.Auth) {\n    history.push(AppRoute.Main);\n  }\n\n  return (\n    <div className=\"page page--gray page--login\">\n      <Header/>\n      <main className=\"page__main page__main--login\">\n        <div className=\"page__login-container container\">\n          <section className=\"login\">\n            <h1 className=\"login__title\">Sign in</h1>\n            <form\n              className=\"login__form form\"\n              action=\"\"\n              method=\"post\"\n              onSubmit={handleSubmit}\n            >\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">E-mail</label>\n                <input\n                  ref={loginRef}\n                  className=\"login__input form__input\"\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  required\n                />\n              </div>\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">Password</label>\n                <input\n                  ref={passwordRef}\n                  className=\"login__input form__input\"\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  required\n                  pattern={'([A-Za-z]+[0-9]|[0-9]+[A-Za-z])[A-Za-z0-9]*'}\n                />\n              </div>\n              <button className=\"login__submit form__submit button\" type=\"submit\">Sign in</button>\n            </form>\n          </section>\n          <section className=\"locations locations--login locations--current\">\n            <div className=\"locations__item\">\n              <Link className=\"locations__item-link\" to={AppRoute.Main}>\n                <span>Paris</span>\n              </Link>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default AuthScreen;\n","import {Offer, Offers} from '../../types/offer';\nimport {State} from '../../types/state';\nimport {NameSpace} from '../root-reducer';\n\nexport const getDetailedOffer = (state: State): Offer | null => state[NameSpace.Offers].detailedOffer;\nexport const getCityOffers = (state: State): Offers => state[NameSpace.Offers].offers.filter((offer) => offer.city.name === getCurrentCity(state));\nexport const getNearbyOffers = (state: State): Offers => state[NameSpace.Offers].nearbyOffers;\nexport const getOffersLoadStatus = (state: State): boolean => state[NameSpace.Offers].isDataLoaded;\nexport const getCurrentCity = (state: State): string  => state[NameSpace.Offers].currentCity;\nexport const getFavoritesOffers = (state: State): Offers => state[NameSpace.Offers].favoriteOffers;\n","import {OfferCardType, OfferType} from '../../const';\n\nexport const getArticleClass = (param: OfferCardType): string => {\n  switch (param) {\n    case OfferCardType.Favorites:\n      return 'favorites__card place-card';\n    case OfferCardType.NearPlaces:\n      return 'near-places__card place-card';\n    default:\n      return 'cities__place-card place-card';\n  }\n};\n\nexport const getImageWrapper = (param: OfferCardType): string => {\n  switch (param) {\n    case OfferCardType.Favorites:\n      return 'favorites__image-wrapper place-card__image-wrapper';\n    case OfferCardType.NearPlaces:\n      return 'near-places__image-wrapper place-card__image-wrapper';\n    default:\n      return 'cities__image-wrapper place-card__image-wrapper';\n  }\n};\n\nexport const getImageWidth = (param: OfferCardType): string => {\n  switch (param) {\n    case OfferCardType.Favorites:\n      return '150';\n    case OfferCardType.NearPlaces:\n      return '260';\n    default:\n      return '260';\n  }\n};\n\nexport const getImageHeight = (param: OfferCardType): string => {\n  switch (param) {\n    case OfferCardType.Favorites:\n      return '110';\n    case OfferCardType.NearPlaces:\n      return '200';\n    default:\n      return '200';\n  }\n};\n\nexport const getOfferType = (offerType: OfferType): string => {\n  switch (offerType) {\n    case OfferType.Apartment:\n      return 'Apartment';\n    case OfferType.Room:\n      return 'Private room';\n    case OfferType.House:\n      return 'House';\n    case OfferType.Hotel:\n      return 'Hotel';\n    default:\n      throw new Error(`Not found offer type: ${offerType}`);\n  }\n};\n","import React, {memo} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Offer} from '../../types/offer';\nimport {Link, useHistory} from 'react-router-dom';\nimport {AppRoute, AuthorizationStatus, OfferCardType} from '../../const';\nimport {getArticleClass, getImageWrapper, getImageHeight, getImageWidth, getOfferType} from './utils';\nimport {postFavoriteAction} from '../../store/api-actions';\nimport {getAuthorizationStatus} from '../../store/user-process/selectors';\n\ntype CardItemProps = {\n  type: OfferCardType;\n  offer: Offer;\n  onMouseEnter: (() => void) | null,\n  onMouseLeave: (() => void) | null\n}\n\nfunction OfferCard(props: CardItemProps): JSX.Element {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const offer = props.offer;\n  const {id, previewImage, title, isPremium, isFavorite, type, price} = offer;\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  const handleBookmark = () => {\n    if (authorizationStatus !== AuthorizationStatus.Auth) {\n      history.push(AppRoute.SignIn);\n      return;\n    }\n    dispatch(postFavoriteAction(id, !isFavorite));\n  };\n\n  const renderPremiumTag = () => {\n    if (isPremium) {\n      return (\n        <div className=\"place-card__mark\">\n          <span>Premium</span>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <article className={getArticleClass(props.type)}\n      onMouseEnter={() => props.onMouseEnter && props.onMouseEnter()}\n      onMouseLeave={() => props.onMouseLeave && props.onMouseLeave()}\n    >\n      {renderPremiumTag()}\n      <div className={getImageWrapper(props.type)}>\n        <Link to={`${AppRoute.Room}/${id}`}>\n          <img className=\"place-card__image\" src={previewImage} width={getImageWidth(props.type)} height={getImageHeight(props.type)} alt=\"Place image\"/>\n        </Link>\n      </div>\n      <div className=\"place-card__info\">\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">&euro;{price}</b>\n            <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n          </div>\n          <button className={`place-card__bookmark-button ${isFavorite && authorizationStatus === AuthorizationStatus.Auth ? 'place-card__bookmark-button--active' : ''} button`}\n            type=\"button\"\n            onClick={handleBookmark}\n          >\n            <svg className=\"place-card__bookmark-icon\" width=\"18\" height=\"19\">\n              <use xlinkHref=\"#icon-bookmark\"/>\n            </svg>\n            <span className=\"visually-hidden\">{(offer.isFavorite) ? 'In bookmarks' : 'To bookmarks'}</span>\n          </button>\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={{width: '80%'}}/>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <h2 className=\"place-card__name\">\n          <Link to={`${AppRoute.Room}/${id}`}>\n            {title}\n          </Link>\n        </h2>\n        <p className=\"place-card__type\">{getOfferType(type)}</p>\n      </div>\n    </article>\n  );\n}\n\nexport default memo(OfferCard);\n","import {Offers} from '../../types/offer';\nimport OfferCardItem from '../offer-card/offer-card';\nimport {OfferCardType} from '../../const';\nimport React from 'react';\n\ntype FavoriteListProps = {\n  offers: Offers,\n  city: string,\n}\n\nfunction FavoritesListItem(props: FavoriteListProps): JSX.Element {\n  const favoriteOffers = props.offers;\n  const favoriteOfferCity = props.city;\n\n  return (\n    <li\n      className=\"favorites__locations-items\"\n      data-testid=\"favorite offers\"\n    >\n      <div className=\"favorites__locations locations locations--current\">\n        <div className=\"locations__item\">\n          <a className=\"locations__item-link\" href=\"/\">\n            <span>{favoriteOfferCity}</span>\n          </a>\n        </div>\n      </div>\n      <div className=\"favorites__places\">\n        {favoriteOffers.filter((offer) => offer.city.name === favoriteOfferCity)\n          .map((favoriteOffer) => (\n            <OfferCardItem\n              key={favoriteOffer.id}\n              type={OfferCardType.Favorites}\n              offer={favoriteOffer}\n              onMouseEnter={null}\n              onMouseLeave={null}\n            />))}\n      </div>\n    </li>\n  );\n}\n\nexport default FavoritesListItem;\n","import React, {useEffect} from 'react';\nimport Header from '../header/header';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getFavoritesOffers} from '../../store/offers/selectors';\nimport {loadFavorites} from '../../store/api-actions';\nimport FavoritesListItem from './favorites-list-item';\n\nfunction FavoritesScreen(): JSX.Element {\n  const favoriteOffers = useSelector(getFavoritesOffers);\n  const hasFavoriteOffers = favoriteOffers.length !== 0;\n  const favoriteOffersCities = new Set <string>();\n\n  favoriteOffers.forEach((offer) => favoriteOffersCities.add(offer.city.name));\n\n  const dispatch= useDispatch();\n\n  useEffect(() => {\n    dispatch(loadFavorites());\n  }, [dispatch]);\n\n\n  return (\n    <div className=\"page\">\n\n      <Header/>\n\n      { hasFavoriteOffers ? (\n        <main className=\"page__main page__main--favorites\">\n          <div className=\"page__favorites-container container\">\n            <section className=\"favorites\">\n              <h1 className=\"favorites__title\">Saved listing</h1>\n              <ul className=\"favorites__list\">\n                {\n                  [...favoriteOffersCities]\n                    .map((city): JSX.Element => (\n                      <FavoritesListItem\n                        key={city}\n                        city={city}\n                        offers={favoriteOffers}\n                      />\n                    ))\n                }\n              </ul>\n            </section>\n          </div>\n        </main>\n      ) : (\n        <main className=\"page__main page__main--favorites page__main--favorites-empty\">\n          <div className=\"page__favorites-container container\">\n            <section className=\"favorites favorites--empty\">\n              <h1 className=\"visually-hidden\">Favorites (empty)</h1>\n              <div className=\"favorites__status-wrapper\">\n                <b className=\"favorites__status\">Nothing yet saved.</b>\n                <p className=\"favorites__status-description\">Save properties to narrow down search or plan your future\n        trips.\n                </p>\n              </div>\n            </section>\n          </div>\n        </main>\n      )}\n      <footer className=\"footer container\">\n        <a className=\"footer__logo-link\"\n          href=\"main.html\"\n        >\n          <img className=\"footer__logo\"\n            src=\"img/logo.svg\"\n            alt=\"6 cities logo\"\n            width=\"64\"\n            height=\"33\"\n          />\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default FavoritesScreen;\n","import {State} from '../../types/state';\nimport {SortType} from '../../const';\nimport {NameSpace} from '../root-reducer';\n\nexport const getCurrentSortType = (state: State): SortType => state[NameSpace.StateData].currentSortType;\n","import {SortType} from '../../const';\nimport React, {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {sortTypeChanged} from '../../store/actions';\nimport {getCurrentSortType} from '../../store/state/selector';\n\nfunction Sort(): JSX.Element {\n  const dispatch = useDispatch();\n\n  const currentSortType = useSelector(getCurrentSortType);\n\n  const onSortTypeChange = (sortType: SortType) => {\n    dispatch(sortTypeChanged(sortType));\n  };\n\n  const [dropdownOpened, setDropdownOpened] = useState<boolean>(false);\n  const sortTypes = Object.values(SortType);\n\n  const onSortTypeClick = (sortType: SortType): void => {\n    if (sortType !== currentSortType) {\n      onSortTypeChange(sortType);\n    }\n    setDropdownOpened(false);\n  };\n\n  return (\n    <form className=\"places__sorting\" action=\"#\" method=\"get\">\n      <span className=\"places__sorting-caption\">Sort by </span>\n      <span className=\"places__sorting-type\" tabIndex={0} onClick={() => setDropdownOpened(!dropdownOpened)}>\n        {currentSortType}\n        <svg className=\"places__sorting-arrow\" width=\"7\" height=\"4\">\n          <use xlinkHref=\"#icon-arrow-select\"/>\n        </svg>\n      </span>\n      <ul className={`places__options places__options--custom ${dropdownOpened\n        ? 'places__options--opened'\n        : 'places__options--closed'}`}\n      >\n        {sortTypes.map((sortType) => (\n          <li\n            key={sortType}\n            className={`places__option ${sortType === currentSortType\n              ? 'places__option--active'\n              : ''}`}\n            onClick={() => onSortTypeClick(sortType)}\n            tabIndex={0}\n          >{sortType}\n          </li>\n        ))}\n      </ul>\n    </form>\n  );\n}\n\nexport default Sort;\n","import React from 'react';\nimport OfferCardItem from './offer-card';\nimport {Offer, Offers} from '../../types/offer';\nimport {OfferCardType} from '../../const';\nimport Sort from '../sort/sort';\nimport {SortType} from '../../const';\nimport {useSelector} from 'react-redux';\nimport {getCurrentSortType} from '../../store/state/selector';\n\nconst getSortedOffers = (currentSortType: string, offers: Offers) => {\n  switch(currentSortType){\n    case SortType.PriceIncrease: {\n      return offers.slice().sort((offerA, offerB) => offerA.price - offerB.price);\n    }\n    case SortType.PriceDecrease: {\n      return offers.slice().sort((offerA, offerB) => offerB.price - offerA.price);\n    }\n    case SortType.TopRatedFirst: {\n      return offers.slice().sort((offerA, offerB) => offerB.rating - offerA.rating);\n    }\n    default: {\n      return offers;\n    }\n  }\n};\n\ntype CardListProps = {\n  onOfferMouseEnter: (offerId: string) => void,\n  onOfferMouseLeave: () => void,\n  currentCity: string,\n  offers: Offers,\n}\n\nfunction OfferCardList(props: CardListProps): JSX.Element {\n  const currentSortType = useSelector(getCurrentSortType);\n\n  const sortedOffers = getSortedOffers(currentSortType, props.offers);\n\n  const onOfferMouseEnter = (offer: Offer) => {\n    props.onOfferMouseEnter(offer.id);\n  };\n\n  const onOfferMouseLeave = () => {\n    props.onOfferMouseLeave();\n  };\n\n  return (\n    <section className=\"cities__places places\">\n      <h2 className=\"visually-hidden\">Places</h2>\n      <b className=\"places__found\">{props.offers.length} places to stay in {props.currentCity}</b>\n      <Sort />\n      <div className=\"cities__places-list places__list tabs__content\">\n        {sortedOffers.map((offer) => (\n          <OfferCardItem\n            key={offer.id}\n            type={OfferCardType.Cities}\n            offer={offer}\n            onMouseEnter={() => onOfferMouseEnter(offer)}\n            onMouseLeave={() => onOfferMouseLeave()}\n          />))}\n      </div>\n    </section>\n  );\n}\n\nexport default OfferCardList;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {cityChanged} from '../../store/actions';\nimport {CityName} from '../../const';\nimport {getCurrentCity} from '../../store/offers/selectors';\n\nfunction CitiesNavigation(): JSX.Element {\n  const currentCity = useSelector(getCurrentCity);\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <h1 className=\"visually-hidden\">Cities</h1>\n      <div className=\"tabs\">\n        <section className=\"locations container\">\n          <ul className=\"locations__list tabs__list\">\n            {Object.values(CityName)\n              .map((item) => (\n                <li key={item} className=\"locations__item\">\n                  <Link\n                    className={`locations__item-link tabs__item ${item === currentCity && 'tabs__item--active'}`}\n                    to=\"/\"\n                    onClick={(evt) => {\n                      evt.preventDefault();\n                      dispatch(cityChanged(item));\n                    }}\n                  >\n                    <span>{item}</span>\n                  </Link>\n                </li>))}\n          </ul>\n        </section>\n      </div>\n    </>\n  );\n}\n\nexport default CitiesNavigation;\n","import {useEffect, useState, MutableRefObject} from 'react';\nimport {Map, TileLayer} from 'leaflet';\nimport {Location} from '../types/offer';\n\nfunction useMap(\n  mapRef: MutableRefObject<HTMLElement | null>,\n  cityLocation: Location,\n): Map | null {\n  const [map, setMap] = useState<Map | null>(null);\n\n  useEffect(() => {\n    if (mapRef.current !== null && map === null) {\n      const instance = new Map(mapRef.current, {\n        center: {\n          lat: cityLocation.latitude,\n          lng: cityLocation.longitude,\n        },\n        zoom: cityLocation.zoom,\n      });\n\n      const layer = new TileLayer(\n        'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png',\n        {\n          attribution:\n            '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n        },\n      );\n\n      instance.addLayer(layer);\n\n      setMap(instance);\n    }\n  }, [mapRef, map, cityLocation]);\n\n  return map;\n}\n\nexport default useMap;\n","import {memo, useEffect, useRef} from 'react';\nimport useMap from '../../hooks/useMap';\nimport L, {Icon, Marker} from 'leaflet';\nimport {Location} from '../../types/offer';\nimport 'leaflet/dist/leaflet.css';\nimport {URL_MARKER_DEFAULT, URL_MARKER_CURRENT} from '../../const';\n\ntype MapPoint = {\n  id: string,\n  location: Location,\n}\n\ntype MapProps = {\n  cityLocation: Location,\n  points: MapPoint[],\n  selectedPoint: MapPoint | undefined;\n}\n\nconst defaultCustomIcon = new Icon({\n  iconUrl: URL_MARKER_DEFAULT,\n  iconSize: [27, 39],\n  iconAnchor: [20, 40],\n});\n\nconst currentCustomIcon = new Icon({\n  iconUrl: URL_MARKER_CURRENT,\n  iconSize: [27, 39],\n  iconAnchor: [20, 40],\n});\n\nlet markerGroup: L.LayerGroup;\n\nfunction Map({cityLocation, points, selectedPoint}: MapProps): JSX.Element {\n  const mapRef = useRef(null);\n  const map = useMap(mapRef, cityLocation);\n\n  useEffect(() => {\n    if (map) {\n      if (markerGroup) {\n        markerGroup.clearLayers();\n      }\n      markerGroup = L.layerGroup().addTo(map);\n\n      points.forEach((point) => {\n        const marker = new Marker({\n          lat: point.location.latitude,\n          lng: point.location.longitude,\n        });\n\n        marker\n          .setIcon(\n            selectedPoint && point.id === selectedPoint.id\n              ? currentCustomIcon\n              : defaultCustomIcon,\n          )\n          .addTo(markerGroup);\n      });\n    }\n  }, [map, points, selectedPoint]);\n\n  useEffect(() => {\n    if (map) {\n      map.setView([cityLocation.latitude, cityLocation.longitude]);\n    }\n  }, [map, cityLocation]);\n\n  return <div style={{minHeight: '100%', maxWidth: '1144px', marginLeft: 'auto', marginRight: 'auto'}} ref={mapRef}/>;\n}\n\nexport default memo(Map);\n","type offersEmptyProps = {\n  currentCity: string,\n}\n\nfunction OffersEmpty({currentCity}: offersEmptyProps): JSX.Element {\n  return (\n    <div className=\"cities__places-container cities__places-container--empty container\">\n      <section className=\"cities__no-places\">\n        <div className=\"cities__status-wrapper tabs__content\">\n          <b className=\"cities__status\">No places to stay available</b>\n          <p className=\"cities__status-description\">We could not find any property available at the moment in {currentCity}</p>\n        </div>\n      </section>\n      <div className=\"cities__right-section\"></div>\n    </div>\n  );\n}\n\nexport default OffersEmpty;\n","import React, {useState} from 'react';\nimport OfferCardList from '../offer-card/offer-card-list';\nimport Header from '../header/header';\nimport CitiesNavigation from '../cities-navigation/cities-navigation';\nimport Map  from '../map/map';\nimport {Offer} from '../../types/offer';\nimport {useSelector} from 'react-redux';\nimport OffersEmpty from '../offers-empty/offers-empty';\nimport {getCityOffers, getCurrentCity} from '../../store/offers/selectors';\n\nfunction MainScreen(): JSX.Element {\n  const cityOffers = useSelector(getCityOffers);\n  const currentCity = useSelector(getCurrentCity);\n\n  const [selectedOffer, setSelectedOffer] = useState<Offer | undefined>(undefined);\n\n  const onOfferMouseEnter = (offerId: string) => {\n    const currentPoint = cityOffers.find((offer) => offer.id === offerId);\n    setSelectedOffer(currentPoint);\n  };\n\n  const onOfferMouseLeave = () => {\n    setSelectedOffer(undefined);\n  };\n\n  return (\n    <div className=\"page page--gray page--main\">\n      <Header/>\n      <main className={cityOffers.length === 0 ? 'page__main page__main--index page__main--index-empty' : 'page__main page__main--index'}>\n\n        <CitiesNavigation/>\n\n        <div className=\"cities\">\n          <div className=\"cities__places-container container\">\n            {cityOffers.length === 0\n              ? <OffersEmpty currentCity={currentCity}/>\n              :\n              <>\n                <OfferCardList offers={cityOffers} currentCity={currentCity} onOfferMouseEnter={onOfferMouseEnter} onOfferMouseLeave={onOfferMouseLeave}/>\n                <div className=\"cities__right-section\">\n                  <section className=\"cities__map map\">\n                    <Map\n                      cityLocation={cityOffers[0].city.location}\n                      points={cityOffers.map((offer) => ({id: offer.id, location: offer.location}))}\n                      selectedPoint={selectedOffer}\n                    />\n                  </section>\n                </div>\n              </>}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default MainScreen;\n","function NotFoundScreen(): JSX.Element {\n  return (\n    <section\n      style = {{\n        display: 'grid',\n        gridTemplateColumns: '60% 40%',\n        height: '100vh',\n        fontFamily: 'rubik, arial, sans-serif',\n        color: '#383838',\n      }}\n    >\n      <div\n        style = {{\n          maxWidth: '1240px',\n          padding: '0 10px',\n          margin: '0 auto',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          textAlign: 'center',\n        }}\n      >\n        <h1\n          style = {{\n            fontSize: '48px',\n            fontStyle: 'oblique',\n          }}\n        >\n          It`s just 404 Error!\n        </h1>\n        <p\n          style={{\n            display: 'block',\n            fontSize: '24px',\n          }}\n        >The Page you are looking for doesn`t exist or an other error occurred.\n        </p>\n        <p\n          style={{\n            display: 'block',\n            fontSize: '24px',\n          }}\n        >\n          <a href=\"/\" style={{\n            textDecoration: 'underline',\n          }}\n          >\n          Go back,\n          </a>\n          to choose a new direction\n        </p>\n      </div>\n      <div\n        style={{\n          background: 'url(../img/404_error.jpg)',\n          backgroundPositionX: '35%',\n          backgroundPositionY: 'center',\n          borderRadius: '10px',\n          transform: 'translateX(10px) rotate(10deg) translateY(5px)',\n          border: '5px solid #4481c3',\n        }}\n      >\n      </div>\n    </section>\n  );\n}\n\nexport default NotFoundScreen;\n","import React from 'react';\nimport {Offers} from '../../types/offer';\nimport OfferCardItem from '../offer-card/offer-card';\nimport {OfferCardType} from '../../const';\n\ntype NearPlacesProps = {\n  offers: Offers,\n}\n\nfunction NearPlaces(props: NearPlacesProps): JSX.Element {\n  const nearestOffers = props.offers;\n\n  return (\n    <section className=\"near-places places\">\n      <h2 className=\"near-places__title\">Other places in the neighbourhood</h2>\n      <div className=\"near-places__list places__list\">\n        {nearestOffers.map((nearestOffer) => (\n          <OfferCardItem\n            key={nearestOffer.id}\n            type={OfferCardType.NearPlaces}\n            offer={nearestOffer}\n            onMouseEnter={null}\n            onMouseLeave={null}\n          />))}\n      </div>\n    </section>\n  );\n}\n\nexport default NearPlaces;\n","import React from 'react';\nimport {Review} from '../../types/reviews';\nimport dayjs from 'dayjs';\n\ntype ReviewProps = {\n  review: Review;\n}\n\nfunction ReviewItem({review}: ReviewProps): JSX.Element {\n  const dateTime =  dayjs(review.date).format('YYYY-MM-DD');\n  const dateFormatted = dayjs(review.date).format('MMMM YYYY');\n\n  return (\n    <li className=\"reviews__item\">\n      <div className=\"reviews__user user\">\n        <div className=\"reviews__avatar-wrapper user__avatar-wrapper\">\n          <img className=\"reviews__avatar user__avatar\" src={review.author.avatarUrl} width=\"54\" height=\"54\" alt=\"Reviews avatar\"/>\n        </div>\n        <span className=\"reviews__user-name\">\n          {review.author.name}\n        </span>\n      </div>\n      <div className=\"reviews__info\">\n        <div className=\"reviews__rating rating\">\n          <div className=\"reviews__stars rating__stars\">\n            <span style={{width: '80%'}}/>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <p className=\"reviews__text\">\n          {review.reviewMessage}\n        </p>\n        <time className=\"reviews__time\" dateTime={dateTime}>{dateFormatted}</time>\n      </div>\n    </li>\n  );\n}\n\nexport default ReviewItem;\n","import React from 'react';\nimport {Review, Reviews} from '../../types/reviews';\nimport ReviewItem from './review-item';\nimport dayjs from 'dayjs';\n\ntype ReviewListProps = {\n  reviews: Reviews;\n}\n\nconst MAX_REVIEW_COUNT = 10;\n\nfunction ReviewsList({reviews}: ReviewListProps): JSX.Element {\n  const userReviews = [...reviews]\n    .sort((prev: Review, next: Review) => dayjs(next.date).diff(dayjs(prev.date)))\n    .slice(0, MAX_REVIEW_COUNT);\n\n  return (\n    <>\n      <h2 className=\"reviews__title\">Reviews &middot; <span className=\"reviews__amount\">{userReviews.length}</span></h2>\n      <ul className=\"reviews__list\">\n        {\n          userReviews\n            .map((review) => (\n              <ReviewItem\n                key={review.id}\n                review={review}\n              />\n            ))\n        }\n      </ul>\n    </>\n  );\n}\n\nexport default ReviewsList;\n","import React, {FormEvent} from 'react';\nimport {useState, ChangeEvent} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {Comment} from '../../types/reviews';\nimport {postCommentAction} from '../../store/api-actions';\n\nconst MIN_MESSAGE_LENGTH = 50;\nconst MAX_MESSAGE_LENGTH = 300;\n\ntype ReviewFormProps = {\n  offerId: string,\n}\n\nfunction ReviewForm(props: ReviewFormProps): JSX.Element {\n  const offerId = props.offerId;\n\n  const [commentMessage, setComment] = useState('');\n  const [rating, setRating] = useState(0);\n  const [isFormDisabled, setIsFormDisabled] = useState<boolean>(false);\n\n  const isFormInvalid = Boolean(rating === 0 || commentMessage.length < MIN_MESSAGE_LENGTH);\n\n  const dispatch = useDispatch();\n\n  const onCommentPost = (review: Comment, id: string) => {\n    dispatch(postCommentAction(review, id,\n      {\n        onStart: () => {\n          setIsFormDisabled(true);\n        },\n        onSuccess: () => {\n          setComment('');\n          setRating(0);\n          setIsFormDisabled(false);\n        },\n        onError: () => {\n          setIsFormDisabled(false);\n        },\n      },\n    ));\n  };\n\n  const handleFormSubmit = (e: FormEvent): void => {\n    e.preventDefault();\n    onCommentPost({commentText: commentMessage, rating: rating}, offerId);\n  };\n\n  return (\n    <form className=\"reviews__form form\" onSubmit={handleFormSubmit}>\n      <label className=\"reviews__label form__label\" htmlFor=\"review\">Your review</label>\n      <div className=\"reviews__rating-form form__rating\">\n        <input className=\"form__rating-input visually-hidden\"\n          name=\"rating\"\n          value=\"5\"\n          id=\"5-stars\"\n          type=\"radio\"\n          onChange={() => setRating(5) }\n          checked={rating === 5}\n          disabled={isFormDisabled}\n        />\n        <label htmlFor=\"5-stars\" className=\"reviews__rating-label form__rating-label\" title=\"perfect\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\"/>\n          </svg>\n        </label>\n        <input className=\"form__rating-input visually-hidden\"\n          name=\"rating\"\n          value=\"4\"\n          id=\"4-stars\"\n          type=\"radio\"\n          onChange={() => setRating(4) }\n          checked={rating === 4}\n          disabled={isFormDisabled}\n        />\n        <label htmlFor=\"4-stars\" className=\"reviews__rating-label form__rating-label\" title=\"good\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\"/>\n          </svg>\n        </label>\n\n        <input className=\"form__rating-input visually-hidden\"\n          name=\"rating\"\n          value=\"3\"\n          id=\"3-stars\"\n          type=\"radio\"\n          onChange={() => setRating(3) }\n          checked={rating === 3}\n          disabled={isFormDisabled}\n        />\n        <label htmlFor=\"3-stars\" className=\"reviews__rating-label form__rating-label\" title=\"not bad\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\"/>\n          </svg>\n        </label>\n\n        <input className=\"form__rating-input visually-hidden\"\n          name=\"rating\"\n          value=\"2\"\n          id=\"2-stars\"\n          type=\"radio\"\n          onChange={() => setRating(2) }\n          checked={rating === 2}\n          disabled={isFormDisabled}\n        />\n        <label htmlFor=\"2-stars\" className=\"reviews__rating-label form__rating-label\" title=\"badly\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\"/>\n          </svg>\n        </label>\n\n        <input className=\"form__rating-input visually-hidden\"\n          name=\"rating\"\n          value=\"1\"\n          id=\"1-star\"\n          type=\"radio\"\n          onChange={() => setRating(1) }\n          checked={rating === 1}\n          disabled={isFormDisabled}\n        />\n        <label htmlFor=\"1-star\" className=\"reviews__rating-label form__rating-label\"\n          title=\"terribly\"\n        >\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\"/>\n          </svg>\n        </label>\n      </div>\n      <textarea className=\"reviews__textarea form__textarea\"\n        id=\"review\"\n        name=\"review\"\n        placeholder=\"Tell how was your stay, what you like and what can be improved\"\n        value={commentMessage}\n        minLength={MIN_MESSAGE_LENGTH}\n        maxLength={MAX_MESSAGE_LENGTH}\n        disabled={isFormDisabled}\n        onChange={(event: ChangeEvent<HTMLTextAreaElement>) => setComment(event.target.value)}\n      />\n      <div className=\"reviews__button-wrapper\">\n        <p className=\"reviews__help\">\n          To submit review please make sure to set <span className=\"reviews__star\">rating</span> and\n          describe your stay with at least <b className=\"reviews__text-amount\">{MIN_MESSAGE_LENGTH} characters</b>.\n        </p>\n        <button className=\"reviews__submit form__submit button\" type=\"submit\" disabled={isFormInvalid || isFormDisabled}>Submit</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ReviewForm;\n","import NearPlaces from '../near-places/near-places';\nimport Map from '../map/map';\nimport React, {useEffect} from 'react';\nimport Header from '../header/header';\nimport {useParams, useHistory} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {loadDetailedOffer, loadOfferReview, loadNearbyPlaces, postFavoriteAction} from '../../store/api-actions';\nimport ReviewsList from '../reviews/reviews-list';\nimport ReviewForm from '../reviews/review-form';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport {countRating} from '../../utils';\nimport {getDetailedOffer, getNearbyOffers} from '../../store/offers/selectors';\nimport {getUserReviews} from '../../store/user/selector';\nimport {getAuthorizationStatus} from '../../store/user-process/selectors';\nimport {getOfferType} from './utils';\n\nconst MAX_NEARBY_POINTS_ON_MAP = 3;\nconst MAX_PROMO_PHOTOS = 6;\n\nfunction OfferDetailedPage(): JSX.Element {\n  const detailedOffer = useSelector(getDetailedOffer);\n  const reviews = useSelector(getUserReviews);\n  const authorizationStatus =  useSelector(getAuthorizationStatus);\n  const nearByOffers = useSelector(getNearbyOffers);\n\n  const mapPoints = [\n    ...(nearByOffers.slice(0, MAX_NEARBY_POINTS_ON_MAP)\n      .map((offer) => ({id: offer.id, location: offer.location}))),\n    ...(detailedOffer ? [({id: detailedOffer.id, location: detailedOffer.location})] : []),\n  ];\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const isFavorite = detailedOffer?.isFavorite;\n\n  const {id} = useParams<{id: string}>();\n\n  const handleBookmark = () => {\n    if (authorizationStatus !== AuthorizationStatus.Auth) {\n      history.push(AppRoute.SignIn);\n      return;\n    }\n\n    dispatch(postFavoriteAction(id, !isFavorite));\n  };\n\n  useEffect(() => {\n    dispatch(loadDetailedOffer(id));\n    dispatch(loadOfferReview(id));\n    dispatch(loadNearbyPlaces(id));\n    window.scroll(0, 0);\n  }, [id, dispatch]);\n\n  return (\n    <div className=\"page\">\n      <Header/>\n      {\n        id === detailedOffer?.id ?\n          <main className=\"page__main page__main--property\">\n            <section className=\"property\">\n              <div className=\"property__gallery-container container\">\n                <div className=\"property__gallery\">\n                  {\n                    detailedOffer?.images\n                      .slice(0, Math.min(detailedOffer.images.length, MAX_PROMO_PHOTOS))\n                      .map((image) => (\n                        <div className=\"property__image-wrapper\" key={`${image}-${detailedOffer.id}`}>\n                          <img className=\"property__image\" src={image} alt=\"Photography studio\" />\n                        </div>\n                      ))\n                  }\n                </div>\n              </div>\n              <div className=\"property__container container\">\n                <div className=\"property__wrapper\">\n                  {detailedOffer?.isPremium && (\n                    <div className=\"property__mark\">\n                      <span>Premium</span>\n                    </div>\n                  )}\n                  <div className=\"property__name-wrapper\">\n                    <h1 className=\"property__name\">\n                      {detailedOffer?.title}\n                    </h1>\n                    <button className={(detailedOffer?.isFavorite) ? 'property__bookmark-button property__bookmark-button--active button' : 'property__bookmark-button button'}\n                      type=\"button\"\n                      onClick={handleBookmark}\n                    >\n                      <svg className=\"property__bookmark-icon\" width=\"31\" height=\"33\">\n                        <use xlinkHref=\"#icon-bookmark\"/>\n                      </svg>\n                      <span className=\"visually-hidden\">{(detailedOffer?.isFavorite) ? 'In bookmarks' : 'To bookmarks'}</span>\n                    </button>\n                  </div>\n                  <div className=\"property__rating rating\">\n                    <div className=\"property__stars rating__stars\">\n                      <span style={ {width: `${countRating(detailedOffer?.rating)}%`} }></span>\n                      <span className=\"visually-hidden\">Rating</span>\n                    </div>\n                    <span className=\"property__rating-value rating__value\">{detailedOffer?.rating}</span>\n                  </div>\n                  <ul className=\"property__features\">\n                    <li className=\"property__feature property__feature--entire\">\n                      {getOfferType(detailedOffer?.type)}\n                    </li>\n                    <li className=\"property__feature property__feature--bedrooms\">\n                      {detailedOffer?.bedrooms} Bedrooms\n                    </li>\n                    <li className=\"property__feature property__feature--adults\">\n                      Max {detailedOffer?.maxAdults} adults\n                    </li>\n                  </ul>\n                  <div className=\"property__price\">\n                    <b className=\"property__price-value\">&euro;{detailedOffer?.price}</b>\n                    <span className=\"property__price-text\">&nbsp;night</span>\n                  </div>\n                  <div className=\"property__inside\">\n                    <h2 className=\"property__inside-title\">What&apos;s inside</h2>\n                    <ul className=\"property__inside-list\">\n                      {detailedOffer?.goods.map((item) => (\n                        <li key={`${item}-${detailedOffer.title}`} className=\"property__inside-item\">\n                          {item}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n\n                  <div className=\"property__host\">\n                    <h2 className=\"property__host-title\">Meet the host</h2>\n                    <div className=\"property__host-user user\">\n                      <div className=\"property__avatar-wrapper property__avatar-wrapper--pro user__avatar-wrapper\">\n                        <img className=\"property__avatar user__avatar\" src={detailedOffer?.host?.avatarUrl} width=\"74\" height=\"74\" alt=\"Host avatar\"/>\n                      </div>\n                      <span className=\"property__user-name\">\n                        {detailedOffer?.host?.name}\n                      </span>\n                      <span className=\"property__user-status\">\n                        {detailedOffer?.host.isPro && <span className=\"property__user-status\">Pro</span>}\n                      </span>\n                    </div>\n                    <div className=\"property__description\">\n                      <p className=\"property__text\">\n                        {detailedOffer?.description}\n                      </p>\n                    </div>\n                  </div>\n\n                  <section className=\"property__reviews reviews\">\n                    {reviews && <ReviewsList reviews={reviews}/>}\n                    {authorizationStatus === AuthorizationStatus.Auth && detailedOffer?.id ? <ReviewForm offerId={detailedOffer.id}/> : null}\n                  </section>\n\n                </div>\n              </div>\n              <section className=\"property__map map\">\n                {nearByOffers && detailedOffer? (\n                  <Map\n                    cityLocation={detailedOffer.location}\n                    points={mapPoints}\n                    selectedPoint={detailedOffer}\n                  />\n                ) : null}\n              </section>\n            </section>\n            <div className=\"container\">\n              {nearByOffers &&\n              <NearPlaces\n                offers={nearByOffers}\n              />}\n            </div>\n          </main>\n          : <div/>\n      }\n    </div>\n  );\n}\n\nexport default OfferDetailedPage;\n","import {MAX_RATING_POINT, PERCENT} from './const';\n\nexport const countRating = (rating: any): number => (Math.round(rating) / MAX_RATING_POINT) * PERCENT;\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst SPINNER_SIZE = 80;\n\ntype SpinnerProps = {\n  message: string\n};\n\nfunction Spinner({message}: SpinnerProps): JSX.Element {\n  return (\n    <div className='spinner'>\n      <div className='spinner__wrapper'\n        style={{\n          height: '100vh',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Loader type=\"Grid\" color=\"#4381c3\" height={SPINNER_SIZE} width={SPINNER_SIZE} />\n        <span style={{\n          fontSize: '14px',\n          marginLeft: '20px',\n        }}\n        >{message}\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import {Route, Redirect} from 'react-router-dom';\nimport {RouteProps} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport {getAuthorizationStatus} from '../../store/user-process/selectors';\n\ntype PrivateRouteProps = RouteProps & {\n  render: () => JSX.Element,\n}\n\nfunction PrivateRoute(props: PrivateRouteProps): JSX.Element {\n  const {exact, path, render} = props;\n\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={() => (\n        authorizationStatus === AuthorizationStatus.Auth\n          ? render()\n          : <Redirect to={AppRoute.SignIn}/>\n      )}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import React from 'react';\nimport {Router as BrowserRouter, Switch, Route} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport AuthScreen from '../auth-screen/auth-screen';\nimport FavoritesScreen from '../favorites-screen/favorites-screen';\nimport MainScreen from '../main-screen/main-screen';\nimport NotFoundScreen from '../not-fount-screen/not-found-screen';\nimport OfferDetailedPage from '../offer-card/offer-detailed-page';\nimport Spinner from '../spinner/spinner';\nimport PrivateRoute from '../private-route/private-route';\nimport browserHistory from '../../browser-history';\nimport {getAuthorizationStatus} from '../../store/user-process/selectors';\nimport {getOffersLoadStatus} from '../../store/offers/selectors';\n\nconst isCheckedAuth = (authorizationStatus: AuthorizationStatus): boolean =>\n  authorizationStatus === AuthorizationStatus.Unknown;\n\nfunction App(): JSX.Element {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const isDataLoaded = useSelector(getOffersLoadStatus);\n\n  if (isCheckedAuth(authorizationStatus) || !isDataLoaded) {\n    return (\n      <Spinner message={'Loading...'} />\n    );\n  }\n\n  return (\n    <BrowserRouter history={browserHistory}>\n      <Switch>\n        <Route exact path={AppRoute.Main}>\n          <MainScreen />\n        </Route>\n        <Route exact path={AppRoute.SignIn}>\n          <AuthScreen />\n        </Route>\n        <Route exact path={`${AppRoute.Room}/:id`}>\n          <OfferDetailedPage />\n        </Route>\n        <PrivateRoute\n          exact\n          path={AppRoute.Favorites}\n          render={() => <FavoritesScreen/>}\n        />\n        <Route>\n          <NotFoundScreen/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import axios, {AxiosError, AxiosInstance, AxiosResponse, AxiosRequestConfig} from 'axios';\nimport {getToken} from './token';\n\nconst BACKEND_URL = 'https://8.react.pages.academy/six-cities';\nconst REQUEST_TIMEOUT = 5000;\n\nenum HttpCode {\n  Unauthorized = 401,\n}\n\ntype UnauthorizedCallback = () => void;\n\nexport const createAPI = (onUnauthorized: UnauthorizedCallback): AxiosInstance => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  api.interceptors.request.use(\n    (config: AxiosRequestConfig) => {\n      const token = getToken();\n\n      if (token) {\n        config.headers['x-token'] = token;\n      }\n\n      return config;\n    },\n  );\n\n  api.interceptors.response.use(\n    (response: AxiosResponse) => response,\n\n    (error: AxiosError) => {\n      const {response} = error;\n\n      if (response?.status === HttpCode.Unauthorized) {\n        onUnauthorized();\n      }\n\n      return Promise.reject(error);\n    },\n  );\n\n  return api;\n};\n","import browserHistory from '../../browser-history';\nimport {Middleware} from 'redux';\nimport {ActionType} from '../../types/action';\nimport {State} from '../../types/state';\n\nexport const redirect: Middleware<unknown, State> =\n  (_store) =>\n    (next) =>\n      (action) => {\n\n        if (action.type === ActionType.RedirectedToRouteAction) {\n          browserHistory.push(action.payload.url);\n        }\n\n        return next(action);\n      };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport {Provider} from 'react-redux';\nimport {rootReducer} from './store/root-reducer';\nimport {createAPI} from './services/api';\nimport {requireAuthorization} from './store/actions';\nimport {loadOffers, checkAuthAction} from './store/api-actions';\nimport {AuthorizationStatus} from './const';\nimport {redirect} from './store/middlewares/redirect';\nimport {configureStore} from '@reduxjs/toolkit';\nimport {ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst api = createAPI(\n  () => store.dispatch(requireAuthorization(AuthorizationStatus.NoAuth)),\n);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }).concat(redirect),\n});\n\n(store.dispatch)(checkAuthAction());\n(store.dispatch)(loadOffers());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ToastContainer />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n"],"sourceRoot":""}